from pypika import Case

from road_dashboards.road_dump_dashboard.table_schemes.base import Base, Column


class MetaData(Base):
    acc_folder: Column = Column("acc_folder", float)
    acc_tag: Column = Column("acc_tag", float)
    adaptive_vmax: Column = Column("adaptive_vmax", float)
    ava_tag: Column = Column("ava_tag", float)
    availability_available: Column = Column("availability_available", bool)
    bay: Column = Column("bay", bool)
    blink_info: Column = Column("blink_info", float)
    bottom_h: Column = Column("bottom_h", float)
    ca_from_lanemarkinginterestca_folder: Column = Column("ca_from_lanemarkinginterestca_folder", bool)
    cacrossing: Column = Column("cacrossing", bool)
    calibration_pitch_rpw: Column = Column("calibration_pitch_rpw", float)
    calibration_roll_rpw: Column = Column("calibration_roll_rpw", float)
    calibration_yaw_rpw: Column = Column("calibration_yaw_rpw", float)
    camh: Column = Column("camh", float)
    carshadow: Column = Column("carshadow", bool)
    ce_top_y_at_dv_z: Column = Column("ce_top_y_at_dv_z", float)
    checkpoint: Column = Column("checkpoint", bool)
    chubby_score: Column = Column("chubby_score", float)
    clear: Column = Column("clear", bool)
    clipnum: Column = Column("clipnum", int)
    cloudy: Column = Column("cloudy", bool)
    cones_in_frame: Column = Column("cones_in_frame", bool)
    construction: Column = Column("construction", bool)
    construction_optional: Column = Column("construction_optional", bool)
    contrastlanemark: Column = Column("contrastlanemark", float)
    country: Column = Column("country", bool)
    crossing_dist_rpw: Column = Column("crossing_dist_rpw", float)
    crosswalk: Column = Column("crosswalk", bool)
    curve_rad_ahead: Column = Column("curve_rad_ahead", float)
    curve_rad_ahead_40_90: Column = Column("curve_rad_ahead_40_90", float)
    curve_rad_ahead_90_120: Column = Column("curve_rad_ahead_90_120", float)
    curve_rad_ahead_gt_120: Column = Column("curve_rad_ahead_gt_120", float)
    curvedarrow: Column = Column("curvedarrow", float)
    diagonalshadow: Column = Column("diagonalshadow", float)
    diagonalshadow_hostleft: Column = Column("diagonalshadow_hostleft", bool)
    diagonalshadow_hostright: Column = Column("diagonalshadow_hostright", bool)
    dist_from__first_frame: Column = Column("dist_from__first_frame", float)
    dist_from__last_frame: Column = Column("dist_from__last_frame", float)
    dist_from_cacrossing: Column = Column("dist_from_cacrossing", float)
    dist_from_checkpoint: Column = Column("dist_from_checkpoint", float)
    dist_from_constarea_optional: Column = Column("dist_from_constarea_optional", float)
    dist_from_constarea_true: Column = Column("dist_from_constarea_true", float)
    dist_from_contrastlanemark: Column = Column("dist_from_contrastlanemark", float)
    dist_from_curve_vmax_15: Column = Column("dist_from_curve_vmax_15", float)
    dist_from_curve_vmax_25: Column = Column("dist_from_curve_vmax_25", float)
    dist_from_curve_vmax_35: Column = Column("dist_from_curve_vmax_35", float)
    dist_from_curvedarrow: Column = Column("dist_from_curvedarrow", float)
    dist_from_deceleration_lm_type_change: Column = Column("dist_from_deceleration_lm_type_change", float)
    dist_from_diagonalshadow_hostleft: Column = Column("dist_from_diagonalshadow_hostleft", float)
    dist_from_diagonalshadow_hostright: Column = Column("dist_from_diagonalshadow_hostright", float)
    dist_from_hatchedarea: Column = Column("dist_from_hatchedarea", float)
    dist_from_hwe: Column = Column("dist_from_hwe", float)
    dist_from_hwemarked_hostleft: Column = Column("dist_from_hwemarked_hostleft", float)
    dist_from_hwemarked_hostright: Column = Column("dist_from_hwemarked_hostright", float)
    dist_from_hwesemimarked_hostleft: Column = Column("dist_from_hwesemimarked_hostleft", float)
    dist_from_hwesemimarked_hostright: Column = Column("dist_from_hwesemimarked_hostright", float)
    dist_from_hwetakenleft: Column = Column("dist_from_hwetakenleft", float)
    dist_from_hwetakenright: Column = Column("dist_from_hwetakenright", float)
    dist_from_hweunmarked_hostleft: Column = Column("dist_from_hweunmarked_hostleft", float)
    dist_from_hweunmarked_hostright: Column = Column("dist_from_hweunmarked_hostright", float)
    dist_from_intersection: Column = Column("dist_from_intersection", float)
    dist_from_lanearrow: Column = Column("dist_from_lanearrow", float)
    dist_from_lanemerge: Column = Column("dist_from_lanemerge", float)
    dist_from_left_lm_type_change: Column = Column("dist_from_left_lm_type_change", float)
    dist_from_leftcrossing_changinglanes: Column = Column("dist_from_leftcrossing_changinglanes", float)
    dist_from_leftcrossing_onlane: Column = Column("dist_from_leftcrossing_onlane", float)
    dist_from_polesleft: Column = Column("dist_from_polesleft", float)
    dist_from_polesright: Column = Column("dist_from_polesright", float)
    dist_from_right_lm_type_change: Column = Column("dist_from_right_lm_type_change", float)
    dist_from_rightcrossing_changinglanes: Column = Column("dist_from_rightcrossing_changinglanes", float)
    dist_from_rightcrossing_onlane: Column = Column("dist_from_rightcrossing_onlane", float)
    dist_from_roundabout: Column = Column("dist_from_roundabout", float)
    dist_from_shadowguardraildashed_hostleft: Column = Column("dist_from_shadowguardraildashed_hostleft", float)
    dist_from_shadowguardraildashed_hostright: Column = Column("dist_from_shadowguardraildashed_hostright", float)
    dist_from_shadowsguardrail_hostleft: Column = Column("dist_from_shadowsguardrail_hostleft", float)
    dist_from_shadowsguardrail_hostright: Column = Column("dist_from_shadowsguardrail_hostright", float)
    dist_from_tunnel: Column = Column("dist_from_tunnel", float)
    dist_from_vmax_decrease: Column = Column("dist_from_vmax_decrease", float)
    dist_re_lm_left: Column = Column("dist_re_lm_left", float)
    dist_re_lm_right: Column = Column("dist_re_lm_right", float)
    dist_to__first_frame: Column = Column("dist_to__first_frame", float)
    dist_to__last_frame: Column = Column("dist_to__last_frame", float)
    dist_to_cacrossing: Column = Column("dist_to_cacrossing", float)
    dist_to_checkpoint: Column = Column("dist_to_checkpoint", float)
    dist_to_constarea_optional: Column = Column("dist_to_constarea_optional", float)
    dist_to_constarea_true: Column = Column("dist_to_constarea_true", float)
    dist_to_contrastlanemark: Column = Column("dist_to_contrastlanemark", float)
    dist_to_curvedarrow: Column = Column("dist_to_curvedarrow", float)
    dist_to_deceleration_lm_type_change: Column = Column("dist_to_deceleration_lm_type_change", float)
    dist_to_diagonalshadow_hostleft: Column = Column("dist_to_diagonalshadow_hostleft", float)
    dist_to_diagonalshadow_hostright: Column = Column("dist_to_diagonalshadow_hostright", float)
    dist_to_hatchedarea: Column = Column("dist_to_hatchedarea", float)
    dist_to_hwe: Column = Column("dist_to_hwe", float)
    dist_to_hwemarked_hostleft: Column = Column("dist_to_hwemarked_hostleft", float)
    dist_to_hwemarked_hostright: Column = Column("dist_to_hwemarked_hostright", float)
    dist_to_hwesemimarked_hostleft: Column = Column("dist_to_hwesemimarked_hostleft", float)
    dist_to_hwesemimarked_hostright: Column = Column("dist_to_hwesemimarked_hostright", float)
    dist_to_hwetakenleft: Column = Column("dist_to_hwetakenleft", float)
    dist_to_hwetakenright: Column = Column("dist_to_hwetakenright", float)
    dist_to_hweunmarked_hostleft: Column = Column("dist_to_hweunmarked_hostleft", float)
    dist_to_hweunmarked_hostright: Column = Column("dist_to_hweunmarked_hostright", float)
    dist_to_intersection: Column = Column("dist_to_intersection", float)
    dist_to_lanearrow: Column = Column("dist_to_lanearrow", float)
    dist_to_lanemerge: Column = Column("dist_to_lanemerge", float)
    dist_to_left_lm_type_change: Column = Column("dist_to_left_lm_type_change", float)
    dist_to_left_turn: Column = Column("dist_to_left_turn", float)
    dist_to_leftcrossing_changinglanes: Column = Column("dist_to_leftcrossing_changinglanes", float)
    dist_to_leftcrossing_onlane: Column = Column("dist_to_leftcrossing_onlane", float)
    dist_to_lm_with_diff_color_left: Column = Column("dist_to_lm_with_diff_color_left", float)
    dist_to_lm_with_diff_color_right: Column = Column("dist_to_lm_with_diff_color_right", float)
    dist_to_merge_rpw: Column = Column("dist_to_merge_rpw", float)
    dist_to_polesleft: Column = Column("dist_to_polesleft", float)
    dist_to_polesright: Column = Column("dist_to_polesright", float)
    dist_to_right_lm_type_change: Column = Column("dist_to_right_lm_type_change", float)
    dist_to_right_turn: Column = Column("dist_to_right_turn", float)
    dist_to_rightcrossing_changinglanes: Column = Column("dist_to_rightcrossing_changinglanes", float)
    dist_to_rightcrossing_onlane: Column = Column("dist_to_rightcrossing_onlane", float)
    dist_to_roundabout: Column = Column("dist_to_roundabout", float)
    dist_to_s_curve: Column = Column("dist_to_s_curve", float)
    dist_to_shadowguardraildashed_hostleft: Column = Column("dist_to_shadowguardraildashed_hostleft", float)
    dist_to_shadowguardraildashed_hostright: Column = Column("dist_to_shadowguardraildashed_hostright", float)
    dist_to_shadowsguardrail_hostleft: Column = Column("dist_to_shadowsguardrail_hostleft", float)
    dist_to_shadowsguardrail_hostright: Column = Column("dist_to_shadowsguardrail_hostright", float)
    dist_to_split_rpw: Column = Column("dist_to_split_rpw", float)
    dist_to_tunnel: Column = Column("dist_to_tunnel", float)
    dlm_host_mismatch: Column = Column("dlm_host_mismatch", float)
    dlm_mismatch: Column = Column("dlm_mismatch", float)
    dp_boundary_left_type_has_lm: Column = Column("dp_boundary_left_type_has_lm", bool)
    dp_boundary_left_type_has_re: Column = Column("dp_boundary_left_type_has_re", bool)
    dp_boundary_right_type_has_lm: Column = Column("dp_boundary_right_type_has_lm", bool)
    dp_boundary_right_type_has_re: Column = Column("dp_boundary_right_type_has_re", bool)
    dp_length: Column = Column("dp_length", float)
    dp_out_of_image_x_at_z: Column = Column("dp_out_of_image_x_at_z", float)
    dump_mix_rdl_andor_gtem: Column = Column("dump_mix_rdl_andor_gtem", float)
    dump_only_gtem: Column = Column("dump_only_gtem", bool)
    entryhost: Column = Column("entryhost", bool)
    entrylane: Column = Column("entrylane", bool)
    entryneighbor: Column = Column("entryneighbor", bool)
    exitlane: Column = Column("exitlane", bool)
    fid: Column = Column("fid", float)
    fid_rpw: Column = Column("fid_rpw", float)
    flipped: Column = Column("flipped", bool)
    focal_len_lm2: Column = Column("focal_len_lm2", float)
    focallen: Column = Column("focallen", float)
    fog: Column = Column("fog", bool)
    fogy: Column = Column("fogy", bool)
    frame: Column = Column("frame", float)
    freeway: Column = Column("freeway", bool)
    gps_rpw_alt: Column = Column("gps_rpw_alt", float)
    gps_rpw_lat: Column = Column("gps_rpw_lat", float)
    gps_rpw_lon: Column = Column("gps_rpw_lon", float)
    gtem_labels_exist: Column = Column("gtem_labels_exist", bool)
    gtrm_validation_score: Column = Column("gtrm_validation_score", float)
    hatchedarea: Column = Column("hatchedarea", bool)
    highway: Column = Column("highway", bool)
    hist_file_exists: Column = Column("hist_file_exists", float)
    horizon: Column = Column("horizon", float)
    host_dist_to_merge_rpw: Column = Column("host_dist_to_merge_rpw", float)
    host_dist_to_split_rpw: Column = Column("host_dist_to_split_rpw", float)
    host_index_rpw: Column = Column("host_index_rpw", float)
    host_lane_curvature_rpw: Column = Column("host_lane_curvature_rpw", float)
    hwe: Column = Column("hwe", bool)
    hwemarked: Column = Column("hwemarked", bool)
    hwesemimarked: Column = Column("hwesemimarked", bool)
    hwetaken: Column = Column("hwetaken", bool)
    hwetakenleft: Column = Column("hwetakenleft", bool)
    hwetakenright: Column = Column("hwetakenright", bool)
    hweunmarked: Column = Column("hweunmarked", bool)
    ignorearea: Column = Column("ignorearea", bool)
    im_rect_bottom: Column = Column("im_rect_bottom", int)
    im_rect_left: Column = Column("im_rect_left", int)
    im_rect_right: Column = Column("im_rect_right", int)
    im_rect_top: Column = Column("im_rect_top", int)
    image_sensor_type: Column = Column("image_sensor_type", str)
    img_bottom: Column = Column("img_bottom", int)
    img_left: Column = Column("img_left", int)
    img_right: Column = Column("img_right", int)
    img_top: Column = Column("img_top", int)
    img_width: Column = Column("img_width", int)
    imlevel: Column = Column("imlevel", int)
    intersection: Column = Column("intersection", bool)
    is_100_deg: Column = Column("is_100_deg", bool)
    is_120_deg: Column = Column("is_120_deg", bool)
    is_3d_labels: Column = Column("is_3d_labels", bool)
    is_any_blurry_lm: Column = Column("is_any_blurry_lm", bool)
    is_any_line_under_car: Column = Column("is_any_line_under_car", bool)
    is_crossing_lines: Column = Column("is_crossing_lines", bool)
    is_eyeq6: Column = Column("is_eyeq6", bool)
    is_ptv2_perfect: Column = Column("is_ptv2_perfect", bool)
    is_re: Column = Column("is_re", int)
    is_short_view_range_perfect: Column = Column("is_short_view_range_perfect", float)
    is_trustable_rpw: Column = Column("is_trustable_rpw", float)
    is_tv_perfect: Column = Column("is_tv_perfect", bool)
    is_yellow_dash_left: Column = Column("is_yellow_dash_left", bool)
    is_yellow_dash_right: Column = Column("is_yellow_dash_right", bool)
    is_yellow_left: Column = Column("is_yellow_left", bool)
    is_yellow_right: Column = Column("is_yellow_right", bool)
    kanji: Column = Column("kanji", bool)
    labeled_cam_index: Column = Column("labeled_cam_index", int)
    lanearrow: Column = Column("lanearrow", bool)
    lanemerge: Column = Column("lanemerge", bool)
    lanesplit: Column = Column("lanesplit", bool)
    left: Column = Column("left", int)
    leftcolor_blue: Column = Column("leftcolor_blue", bool)
    leftcolor_orange: Column = Column("leftcolor_orange", bool)
    leftcolor_other: Column = Column("leftcolor_other", bool)
    leftcolor_white: Column = Column("leftcolor_white", bool)
    leftcolor_yellow: Column = Column("leftcolor_yellow", bool)
    leftcolor_yellowwhite: Column = Column("leftcolor_yellowwhite", bool)
    leftcrossing_changinglanes: Column = Column("leftcrossing_changinglanes", bool)
    leftcrossing_closetolane: Column = Column("leftcrossing_closetolane", bool)
    leftcrossing_onlane: Column = Column("leftcrossing_onlane", bool)
    leftlevel_high: Column = Column("leftlevel_high", bool)
    leftlevel_low: Column = Column("leftlevel_low", bool)
    lefttype_barrier: Column = Column("lefttype_barrier", bool)
    lefttype_botsdots: Column = Column("lefttype_botsdots", bool)
    lefttype_bottsdotsdashed: Column = Column("lefttype_bottsdotsdashed", bool)
    lefttype_bottsdotssolid: Column = Column("lefttype_bottsdotssolid", bool)
    lefttype_chubbylm: Column = Column("lefttype_chubbylm", bool)
    lefttype_conesbarrels: Column = Column("lefttype_conesbarrels", bool)
    lefttype_curb: Column = Column("lefttype_curb", bool)
    lefttype_dashed: Column = Column("lefttype_dashed", bool)
    lefttype_dasheddashed: Column = Column("lefttype_dasheddashed", bool)
    lefttype_dashedsolid: Column = Column("lefttype_dashedsolid", bool)
    lefttype_deceleration: Column = Column("lefttype_deceleration", bool)
    lefttype_decelerationdashed: Column = Column("lefttype_decelerationdashed", bool)
    lefttype_decelerationsolid: Column = Column("lefttype_decelerationsolid", bool)
    lefttype_dlm: Column = Column("lefttype_dlm", bool)
    lefttype_fence: Column = Column("lefttype_fence", bool)
    lefttype_grass: Column = Column("lefttype_grass", bool)
    lefttype_hov: Column = Column("lefttype_hov", bool)
    lefttype_multiple: Column = Column("lefttype_multiple", bool)
    lefttype_otherre: Column = Column("lefttype_otherre", bool)
    lefttype_parkingin: Column = Column("lefttype_parkingin", bool)
    lefttype_roadedge_grassgravel: Column = Column("lefttype_roadedge_grassgravel", bool)
    lefttype_roadpolygon: Column = Column("lefttype_roadpolygon", bool)
    lefttype_snow: Column = Column("lefttype_snow", bool)
    lefttype_snowonlane: Column = Column("lefttype_snowonlane", bool)
    lefttype_solid: Column = Column("lefttype_solid", bool)
    lefttype_soliddashed: Column = Column("lefttype_soliddashed", bool)
    lefttype_solidsolid: Column = Column("lefttype_solidsolid", bool)
    lefttype_tlm: Column = Column("lefttype_tlm", bool)
    lens_type: Column = Column("lens_type", str)
    lm_processor: Column = Column("lm_processor", float)
    lowsun: Column = Column("lowsun", bool)
    map_pos_rpw_x: Column = Column("map_pos_rpw_x", float)
    map_pos_rpw_y: Column = Column("map_pos_rpw_y", float)
    map_pos_rpw_z: Column = Column("map_pos_rpw_z", float)
    max_curvature_rpw: Column = Column("max_curvature_rpw", float)
    max_dlm_width: Column = Column("max_dlm_width", float)
    max_heading_rpw: Column = Column("max_heading_rpw", float)
    max_lm_width_avg: Column = Column("max_lm_width_avg", float)
    max_lm_width_point: Column = Column("max_lm_width_point", float)
    mdbi_car: Column = Column("mdbi_car", int)
    mdbi_country: Column = Column("mdbi_country", bool)
    mdbi_road_city: Column = Column("mdbi_road_city", bool)
    mdbi_road_country: Column = Column("mdbi_road_country", bool)
    mdbi_road_freeway: Column = Column("mdbi_road_freeway", bool)
    mdbi_road_highway: Column = Column("mdbi_road_highway", bool)
    mdbi_time_of_day: Column = Column("mdbi_time_of_day", str)
    mdbi_weather: Column = Column("mdbi_weather", str)
    merge_point: Column = Column("merge_point", float)
    merge_point_x: Column = Column("merge_point_x", float)
    merge_point_z: Column = Column("merge_point_z", float)
    min_d_heading_from_perpendicular_rpw: Column = Column("min_d_heading_from_perpendicular_rpw", float)
    min_tfl_ego_dist_rpw: Column = Column("min_tfl_ego_dist_rpw", float)
    min_tfl_path_dist_rpw: Column = Column("min_tfl_path_dist_rpw", float)
    non_linear: Column = Column("non_linear", float)
    num_dps_500m_rpw: Column = Column("num_dps_500m_rpw", float)
    num_lane_marks: Column = Column("num_lane_marks", float)
    num_road_edges: Column = Column("num_road_edges", float)
    num_road_marks: Column = Column("num_road_marks", float)
    oneway_rpw: Column = Column("oneway_rpw", bool)
    origin_x: Column = Column("origin_x", float)
    origin_y: Column = Column("origin_y", float)
    parallel_hatched_width: Column = Column("parallel_hatched_width", float)
    paths_gt_origin: Column = Column("paths_gt_origin", float)
    polesleft: Column = Column("polesleft", bool)
    polesright: Column = Column("polesright", bool)
    rain: Column = Column("rain", bool)
    rainy: Column = Column("rainy", bool)
    ramp: Column = Column("ramp", bool)
    right: Column = Column("right", int)
    rightcolor_blue: Column = Column("rightcolor_blue", bool)
    rightcolor_orange: Column = Column("rightcolor_orange", bool)
    rightcolor_other: Column = Column("rightcolor_other", bool)
    rightcolor_white: Column = Column("rightcolor_white", bool)
    rightcolor_yellow: Column = Column("rightcolor_yellow", bool)
    rightcolor_yellowwhite: Column = Column("rightcolor_yellowwhite", bool)
    rightcrossing_changinglanes: Column = Column("rightcrossing_changinglanes", bool)
    rightcrossing_closetolane: Column = Column("rightcrossing_closetolane", bool)
    rightcrossing_onlane: Column = Column("rightcrossing_onlane", bool)
    rightlevel_high: Column = Column("rightlevel_high", bool)
    rightlevel_low: Column = Column("rightlevel_low", bool)
    righttype_barrier: Column = Column("righttype_barrier", bool)
    righttype_botsdots: Column = Column("righttype_botsdots", bool)
    righttype_bottsdotsdashed: Column = Column("righttype_bottsdotsdashed", bool)
    righttype_bottsdotssolid: Column = Column("righttype_bottsdotssolid", bool)
    righttype_chubbylm: Column = Column("righttype_chubbylm", bool)
    righttype_conesbarrels: Column = Column("righttype_conesbarrels", bool)
    righttype_curb: Column = Column("righttype_curb", bool)
    righttype_dashed: Column = Column("righttype_dashed", bool)
    righttype_dasheddashed: Column = Column("righttype_dasheddashed", bool)
    righttype_dashedsolid: Column = Column("righttype_dashedsolid", bool)
    righttype_deceleration: Column = Column("righttype_deceleration", bool)
    righttype_decelerationdashed: Column = Column("righttype_decelerationdashed", bool)
    righttype_decelerationsolid: Column = Column("righttype_decelerationsolid", bool)
    righttype_dlm: Column = Column("righttype_dlm", bool)
    righttype_fence: Column = Column("righttype_fence", bool)
    righttype_grass: Column = Column("righttype_grass", bool)
    righttype_hov: Column = Column("righttype_hov", bool)
    righttype_multiple: Column = Column("righttype_multiple", bool)
    righttype_otherre: Column = Column("righttype_otherre", bool)
    righttype_parkingin: Column = Column("righttype_parkingin", bool)
    righttype_roadedge_grassgravel: Column = Column("righttype_roadedge_grassgravel", bool)
    righttype_roadpolygon: Column = Column("righttype_roadpolygon", bool)
    righttype_snow: Column = Column("righttype_snow", bool)
    righttype_snowonlane: Column = Column("righttype_snowonlane", bool)
    righttype_solid: Column = Column("righttype_solid", bool)
    righttype_soliddashed: Column = Column("righttype_soliddashed", bool)
    righttype_solidsolid: Column = Column("righttype_solidsolid", bool)
    righttype_tlm: Column = Column("righttype_tlm", bool)
    road4_labels_exist: Column = Column("road4_labels_exist", bool)
    road_name_rpw: Column = Column("road_name_rpw", float)
    road_type_rpw: Column = Column("road_type_rpw", float)
    roi_origin_lm2_x: Column = Column("roi_origin_lm2_x", int)
    roi_origin_lm2_y: Column = Column("roi_origin_lm2_y", int)
    roundabout: Column = Column("roundabout", bool)
    s_curve_length: Column = Column("s_curve_length", float)
    s_curve_rad1: Column = Column("s_curve_rad1", float)
    s_curve_rad2: Column = Column("s_curve_rad2", float)
    safetyzoneleft: Column = Column("safetyzoneleft", bool)
    safetyzoneright: Column = Column("safetyzoneright", bool)
    sampled_points_host_lane_index_rpw: Column = Column("sampled_points_host_lane_index_rpw", float)
    scene_signals_exists_itrk: Column = Column("scene_signals_exists_itrk", float)
    shadowguardraildashed: Column = Column("shadowguardraildashed", float)
    shadowguardraildashed_hostleft: Column = Column("shadowguardraildashed_hostleft", bool)
    shadowguardraildashed_hostright: Column = Column("shadowguardraildashed_hostright", bool)
    shadows: Column = Column("shadows", bool)
    shadowsguardrail: Column = Column("shadowsguardrail", bool)
    shadowsguardrail_hostleft: Column = Column("shadowsguardrail_hostleft", bool)
    shadowsguardrail_hostright: Column = Column("shadowsguardrail_hostright", bool)
    snow: Column = Column("snow", bool)
    snowonhost: Column = Column("snowonhost", bool)
    snowonlanes: Column = Column("snowonlanes", bool)
    snowonroad: Column = Column("snowonroad", bool)
    snowy: Column = Column("snowy", bool)
    speed: Column = Column("speed", float)
    speed_ahead: Column = Column("speed_ahead", float)
    spline_host_lane_index_rpw: Column = Column("spline_host_lane_index_rpw", float)
    split_exists: Column = Column("split_exists", float)
    split_lines_max_dist: Column = Column("split_lines_max_dist", float)
    split_opening_rpw: Column = Column("split_opening_rpw", float)
    split_point: Column = Column("split_point", bool)
    split_point_x: Column = Column("split_point_x", float)
    split_point_z: Column = Column("split_point_z", float)
    suninimage: Column = Column("suninimage", bool)
    sunny: Column = Column("sunny", bool)
    synthetic: Column = Column("synthetic", bool)
    tagging_code: Column = Column("tagging_code", int)
    tarseam: Column = Column("tarseam", bool)
    tarseams: Column = Column("tarseams", bool)
    top_h: Column = Column("top_h", int)
    tunnel: Column = Column("tunnel", bool)
    underbridge: Column = Column("underbridge", bool)
    underbridgeshadow: Column = Column("underbridgeshadow", bool)
    urban: Column = Column("urban", bool)
    vertical_change_50m: Column = Column("vertical_change_50m", float)
    vertical_change_50m_rpw: Column = Column("vertical_change_50m_rpw", float)
    vmax_full_range: Column = Column("vmax_full_range", float)
    vmax_ignore_type: Column = Column("vmax_ignore_type", float)
    vmax_short_range: Column = Column("vmax_short_range", float)
    warp_index: Column = Column("warp_index", int)
    wet: Column = Column("wet", bool)
    wetroad: Column = Column("wetroad", bool)
    wipers: Column = Column("wipers", bool)
    wipers_freq: Column = Column("wipers_freq", float)
    wipers_prob: Column = Column("wipers_prob", float)
    yaw_rate: Column = Column("yaw_rate", float)
    yawrate_ahead: Column = Column("yawrate_ahead", float)
    is_oncoming_rpw: Column = Column("is_oncoming_rpw", bool)
    is_tvgt_rpw: Column = Column("is_tvgt_rpw", bool)
    is_tvfix_rpw: Column = Column("is_tvfix_rpw", bool)
    clip_tvfix_rpw: Column = Column("clip_tvfix_rpw", bool)
    is_rem_rpw: Column = Column("is_rem_rpw", bool)
    map_source: Column = Column("map_source", str)
    raas_is_path_safe: Column = Column("raas_is_path_safe", bool)
    raas_is_trustable: Column = Column("raas_is_trustable", bool)
    avail_exist_rpw: Column = Column("avail_exist_rpw", int)
    is_crossing_host: Column = Column("is_crossing_host", bool)
    is_crossing_rl: Column = Column("is_crossing_rl", bool)
    is_crossing_oncoming: Column = Column("is_crossing_oncoming", bool)
    is_horizontal_merge: Column = Column("is_horizontal_merge", bool)
    is_ego_turning: Column = Column("is_ego_turning", bool)
    valid_roles_rpw: Column = Column("valid_roles_rpw", bool)
    no_host_in_frame_rpw: Column = Column("no_host_in_frame_rpw", int)
    host_junc_delta_heading_rpw: Column = Column("host_junc_delta_heading_rpw", float)
    host_junc_delta_x_rpw: Column = Column("host_junc_delta_x_rpw", float)
    in_junction_turning_rpw: Column = Column("in_junction_turning_rpw", int)

    road_type: Case = (
        Case(alias="road_type")
        .when(mdbi_road_highway == True, "highway")
        .when(mdbi_road_country == True, "country")
        .when(mdbi_road_city == True, "urban")
        .when(mdbi_road_freeway == True, "freeway")
        .else_("other")
    )
    lm_color: Case = (
        Case(alias="lm_color")
        .when((rightcolor_yellow == True) & (rightcolor_yellow == True), "yellow")
        .when((rightcolor_white == True) & (rightcolor_white == True), "white")
        .when((rightcolor_blue == True) & (rightcolor_blue == True), "blue")
        .else_("other")
    )
