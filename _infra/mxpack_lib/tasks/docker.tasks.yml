# https://taskfile.dev
version: '3'
output: prefixed

vars:
  BUILD_TIME:
    sh: date '+%Y-%m-%d-%H%M%S'
  GREETING: Hello, This task will build, push and run the dashboard container!
  registry_num: "771416621287"
  registry_name: "algo.road"
  aws_repo: "{{.registry_num}}.dkr.ecr.us-east-1.amazonaws.com/{{.registry_name}}"
  image_name: road-eval-dashboard
  dockerfile_name:
    sh: find `git rev-parse --show-toplevel` -name "*Dockerfile*" | head -n 1
  docker_params: " -u `id -u`:`id -g` -e USER=$USER -v /mobileye/shared:/mobileye/shared"
  docker_tag: "{{.image_name}}_{{.BUILD_TIME}}"
  full_ecr_name: "{{.aws_repo}}:{{.docker_tag}}"
  full_ecr_name_latest: "{{.aws_repo}}:{{.image_name}}_latest"


tasks:
  default:
    cmds:
      - echo "{{.GREETING}}"
      - task -l
    silent: true

  pre_build:
    desc: clones all the deps from gitlab because docker does not have permissions
    cmds:
      - echo {{.dockerfile_name}}

  pull_repo:
    desc: pulls a repo if does not exist
    vars:
      branch: master
    cmds:
      - git clone --branch {{.branch}} {{.repo_path}} {{.clone_dst}}
    status:
      - test -d {{.clone_dst}}

  post_build_clean:
    desc: deletes all temp files
    cmds:
      - rm -rf deps

  build:
    desc: builds the docker to {{.image_name}}
    deps:
      - task: pull_father_docker
      - task: pre_build
    cmds:
      - docker build --rm -t {{.image_name}} . -f {{.dockerfile_name}} --build-arg BUILD_TIME={{.BUILD_TIME}}
      - task: post_build_clean

  pull_father_docker:
    desc: pulls the ecr docker that is the father of the target docker
    cmds:
      - task: login_ecr
      - echo `grep "^FROM " {{.dockerfile_name}} | sed -e "s/FROM //g"`
      - |
        docker_name=`grep "^FROM " {{.dockerfile_name}} | sed -e "s/FROM //g"` && \
        echo "Got docker name: "$docker_name
        docker pull ${docker_name}

  list_ecr_tags:
    desc: lists all images in the algo.road repository
    cmds:
      - task: login_ecr
      - aws ecr list-images --repository-name {{.registry_name}} | grep imageTag

  pull_menta:
    desc: pulls menta ecr docker
    cmds:
      - task: login_ecr
      - docker pull {{.full_ecr_name_latest}}

  build_and_push:
    desc: builds the docker to {{.image_name}}
    cmds:
      - task: build
      - task: push

  run:
    desc: Runs the docker "image_name" - {{.image_name}}
    cmds:
      - docker run -it --rm {{.docker_params}} {{.image_name}} /bin/bash


  push:
    desc: "tags the docker with current date and time and pushes to ecr"
    cmds:
      - docker tag {{.image_name}} {{.full_ecr_name}}
      - docker push {{.full_ecr_name}}

  tag_and_push_latest:
    desc: "tags the docker with latest and push"
    cmds:
      - docker tag {{.image_name}} {{.full_ecr_name_latest}}
      - echo "If you want to overwrite the latest version please run:"
      - echo "docker push {{.full_ecr_name_latest}}"

  run_local_gpu:
    desc: ssh to megpu207 and run menta. Specify GPU=# for specific GPU.
    cmds:
    - ssh megpu207
    - task: pull_ecr
    - echo 'Running on core {{.GPU}}'
    - docker run -it --rm --gpus="device={{.GPU}}" {{.docker_params}} {{.full_ecr_name_latest}} bash

  #######
  # ECR #
  #######
  login_ecr:
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin {{.registry_num}}.dkr.ecr.us-east-1.amazonaws.com

  pull_ecr:
    desc: |
      Pulls the docker from ECR using the "docker_tag" - {{.docker_tag}}
                              You can list all the tags in our repo by "task list_ecr_tags"
    deps:
      - task: login_ecr
    cmds:
      - docker pull {{.full_ecr_name}}
