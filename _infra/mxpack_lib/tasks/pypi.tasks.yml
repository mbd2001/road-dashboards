version: "3"

vars:
  PYPI_INDEX: "https://artifactory.sddc.mobileye.com/artifactory/api/pypi/me-pypi-dev"
  ENV_NAME: "mxpcli-pypi-py${PYVERSION}"

tasks:
  venv:name:
    cmds: [ "echo {{.ENV_NAME}}"]
    silent: true

  venv:create:
    desc: _
    cmds:
      # todo: move into a env.yaml
      # @info: install conda with conda, as pypi conda pkg is not maintained.
      - mamba create -n {{.ENV_NAME}}  python=${PYVERSION} conda conda-build pip -y
      - mamba run --no-capture-output -n {{.ENV_NAME}} pip install ".[test]" -q
      - mamba run --no-capture-output -n {{.ENV_NAME}} task mkdocs:install-pypi-deps
      - echo "run - conda activate {{.ENV_NAME}}"

  build:
    desc: Build pypi package via setuptools
    env:
      MX_PACKAGE_VERSION:
        sh: "yq4 .version_info.active_version {{.CONDA_PRE_BUILD_INFO_PATH}}"
    cmds:
      - task conda:venv:update:build-env
      - rm -rf __localbuild__/pypi
      - "{{.VENV_EXE}} build run pip wheel -w __localbuild__/pypi . --no-deps"

  package:install:in-test:
    desc: Install build wheel inside test-env
    vars:
      MX_PACKAGE_VERSION:
        sh: "yq4 .version_info.active_version {{.CONDA_PRE_BUILD_INFO_PATH}}"
    cmds:
      - task conda:venv:update:test-env
      - mamba run --name {{.META_TEST_ENV_NAME}} pip install dist/{{.PACKAGE_NAME}}-{{.MX_PACKAGE_VERSION}}-py3-none-any.whl

  package:publish:
    desc: Publish pip package to ME pypi
    silent: true
    cmds:
      - "{{.VENV_EXE}} build run twine upload --repository-url {{.PYPI_INDEX}} __localbuild__/pypi/* --username '{{.ANGIEDEPLOYUSER}}' --password '{{.ANGIEDEPLOYPASS}}'"

